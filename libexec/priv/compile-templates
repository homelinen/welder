#!/usr/bin/env ruby
#
# Parses templates using Liquid
#
require 'yaml'
require 'fileutils'
require 'liquid'

Liquid::Template.error_mode = :strict

files_path  = ARGV[0]
playbook_path = ARGV[1]
config_path = "./config.yml"
vault_path  = "./vault.yml"

config = {}
config = YAML.load_file(playbook_path) if File.exists?(playbook_path)
config = config.merge(YAML.load_file(config_path)) if File.exists?(config_path)
config = config.merge(YAML.load_file(vault_path)) if File.exists?(vault_path)

Dir["#{files_path}/modules/**/*.liquid"].each do |tpl|
  template = Liquid::Template.parse(File.read(tpl))
  parsed = template.render(config, { strict_variables: true })

  File.write(tpl.gsub('.liquid', ''), parsed)
end
